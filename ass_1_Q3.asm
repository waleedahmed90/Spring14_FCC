.MODEL SMALL
.STACK 100H
.DATA

M1 DB 'ORIGINAL BIT STRING: $'
M2 DB 'AFTER REVERSING IT:  $'

.CODE
MAIN PROC 
	
	MOV AX,@DATA
	MOV DS,AX
	;PRINTING THE M1
	MOV AH,9
	LEA DX,M1
	INT 21H
	
	MOV BX, 0000010011110111B	;LOADING A BINARY BIT STRING IN BX
	
	MOV AH,2	;SINGLE CHARACTER OUTPUT
	MOV CX,16	;INITIALIZING THE COUNTER
	
	
	;;LOOP FOR THE BINARY OUTPUT
@LOOP1:
	ROL BX,1
	JC @PRINT1
	MOV DL,'0'
	INT 21H
	LOOP @LOOP1
	JMP @ROLL2
	
@PRINT1:
	MOV DL,'1'
	INT 21H
	LOOP @LOOP1
	

@ROLL2:
	;MOVING CURSOR TO THE NEXT LINE
	MOV AH,2
	MOV DL,0DH
	INT 21H
	MOV DL,0AH
	INT 21H
;REVERSING THE BIT PATTERN IN BX

XOR AX,AX
MOV CX, 16

@_LOOP:
	ROR BX,1
	JC @_1
	SHL AX,1
	OR AX,0000000000000000B
	LOOP @_LOOP
	JMP @ROLL3
	
@_1:
	SHL AX,1
	OR AX,0000000000000001B
	LOOP @_LOOP

@ROLL3:
		MOV BX,AX
	
;PRINTING THE MESSAGE M2
MOV AH,9
LEA DX,M2
INT 21H


;PRINTING THE REVERSE BIT STRING

MOV AH,2
MOV CX,16

@LOOP2:
	ROL BX,1
	JC @_PRINT1
	MOV DL,'0'
	INT 21H
	LOOP @LOOP2
	JMP @EXIT
	
@_PRINT1:
	MOV DL,'1'
	INT 21H
	LOOP @LOOP2


;RETURNING CONTROL TO THE DOS
@EXIT:
MOV AH,4CH
INT 21H

		MAIN ENDP
END MAIN